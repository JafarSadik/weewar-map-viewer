plugins {
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id 'com.adarshr.test-logger' version '3.2.0'
}

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

kotlin {
    jvmToolchain(17)
}

repositories {
    mavenCentral()
}

springBoot {
    mainClass = 'com.github.weewar.mapviewer.WeewarMapViewerKt'
}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-thymeleaf',
            'net.coobird:thumbnailator:0.4.20',
            'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7',
            'org.yaml:snakeyaml:2.1'
    )

    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'nl.jqno.equalsverifier:equalsverifier:3.15.1',
            'org.mockito:mockito-core:4.8.1',
            'org.assertj:assertj-core:3.23.1',
            'org.junit.jupiter:junit-jupiter-api:5.8.2',
            'org.objenesis:objenesis:3.3'
    )

    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    )
}

// Converts all weewar maps from their original XML format to a more convenient JSON format.
tasks.register('convertMaps') {
    description = "Converts original weewar maps from XML to JSON format"
    group = "weewar map viewer"

    def targetMapsDir = "${project.rootDir}/src/main/resources/public/api/maps"
    def script = "${project.rootDir}/maps/convert-maps.groovy"
    def args = ["--force", targetMapsDir] as String[]
    def bindings = [force: true, targetMapsDir: targetMapsDir]

    doLast {
        def shell = new GroovyShell(new Binding(bindings))
        shell.run(new File(script), args)
    }
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}